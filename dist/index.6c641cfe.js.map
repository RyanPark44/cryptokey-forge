{"mappings":"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","sources":["<anon>","src/js/controller.js","src/js/model.js","src/js/config.js","src/js/view/parameterView.js","src/js/view/view.js","src/js/view/keyView.js","src/js/view/oldKeyView.js"],"sourcesContent":["const $ba30e20475feac5a$export$c67236d4de3001d1 = 10;\n\n\nconst $0f1d4402dffacf5b$export$ca000e230c0caa3e = {\n    key: \"\",\n    keyLength: 22,\n    characterSet: {\n        alphabet: true,\n        numbers: true,\n        symbols: true\n    },\n    oldKeys: []\n};\n/**\n * Create an array of allowable characters\n *\n * Return: array of allowable characters\n */ const $0f1d4402dffacf5b$var$getAllowedCharacters = function() {\n    const allowedChars = [];\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.characterSet.alphabet) \"abcdefghijklmnpqrstuvwxzy\".split(\"\").forEach((char)=>allowedChars.push(char) && allowedChars.push(char.toUpperCase()));\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.characterSet.numbers) \"1234567890\".split(\"\").forEach((num)=>allowedChars.push(num));\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.characterSet.symbols) \"!@#$%^&*()[]{}/|\".split(\"\").forEach((char)=>allowedChars.push(char));\n    return allowedChars;\n};\nconst $0f1d4402dffacf5b$export$7fa8378418b4411e = function(keyParameters) {\n    const { keyLength: keyLength, ...characterSet } = keyParameters;\n    // 1. Set length and allowable characters in state\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.keyLength = +keyLength;\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.characterSet = characterSet;\n    // 2. Get allowable character array\n    const allowedChars = $0f1d4402dffacf5b$var$getAllowedCharacters();\n    // 3. Generate random key with character set\n    const randomKey = [];\n    const charSetLength = allowedChars.length;\n    for(let i = 0; i < $0f1d4402dffacf5b$export$ca000e230c0caa3e.keyLength; i++)randomKey.push(allowedChars.at(Math.floor(Math.random() * charSetLength)));\n    // 4. Set the current state key\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.key = randomKey.join(\"\");\n};\nconst $0f1d4402dffacf5b$export$1fe2afda297532ed = function() {\n    if (!$0f1d4402dffacf5b$export$ca000e230c0caa3e.key) return;\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.oldKeys.push($0f1d4402dffacf5b$export$ca000e230c0caa3e.key);\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.oldKeys.length > (0, $ba30e20475feac5a$export$c67236d4de3001d1)) $0f1d4402dffacf5b$export$ca000e230c0caa3e.oldKeys.shift();\n};\n\n\nclass $3a395c083ce013f4$export$2e2bcd8739ae039 {\n    _data;\n    render(data) {\n        const markup = this._generateMarkup(data);\n        if (!markup) return;\n        this._clear();\n        this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n    }\n    _clear() {\n        this._parentElement.innerHTML = ``;\n    }\n}\n\n\nclass $a37ae16f19b7a155$var$paramViewCl extends (0, $3a395c083ce013f4$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".key__parameters\");\n    /**\n   * Get key parameters from form inputParams\n   */ getKeyParameters() {\n        const inputParams = Array.from(this._parentElement.querySelectorAll(\"input\"));\n        return {\n            keyLength: inputParams[0].value,\n            alphabet: inputParams[1].checked,\n            numbers: inputParams[2].checked,\n            symbols: inputParams[3].checked\n        };\n    }\n    updateRangeValue() {\n        const rangeValue = document.querySelector(\"#rangeValue\");\n        const rangeInput = document.querySelector(\"#rangeInput\");\n        rangeValue.textContent = rangeInput.value;\n    }\n    addHandlerGenerate(handlerFunction) {\n        const btn = document.querySelector(\".generate--btn\");\n        btn.addEventListener(\"click\", handlerFunction);\n    }\n    addHandlerRangeInputUpdate(handlerFunction) {\n        const rangeInput = document.querySelector(\"#rangeInput\");\n        rangeInput.addEventListener(\"input\", handlerFunction);\n    }\n}\nvar $a37ae16f19b7a155$export$2e2bcd8739ae039 = new $a37ae16f19b7a155$var$paramViewCl();\n\n\n\nclass $5e5b69c292c6671a$var$keyViewCl extends (0, $3a395c083ce013f4$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".key__input__container\");\n    selectKeyText() {\n        this._parentElement.select();\n    }\n    _generateMarkup(key) {\n        return `\n        <input\n          type=\"text\"\n          class=\"p-1 w-full select-all bg-[#2D283E]\"\n          value=\"${key}\"\n        />\n    `;\n    }\n}\nvar $5e5b69c292c6671a$export$2e2bcd8739ae039 = new $5e5b69c292c6671a$var$keyViewCl();\n\n\n\nclass $c4a9570f3a34ff00$var$oldKeysCl extends (0, $3a395c083ce013f4$export$2e2bcd8739ae039) {\n    _parentElement = document.querySelector(\".previous__key__container\");\n    _generateMarkup(entries) {\n        if (entries.length === 0) return;\n        // Reversed array so that it would display correctly for user\n        const markup = entries.map((entry)=>{\n            return `\n      <p class=\"first-letter:text-[#802BB1]\">> ${entry}</p>`;\n        }).reverse();\n        return markup.join(\"\");\n    }\n}\nvar $c4a9570f3a34ff00$export$2e2bcd8739ae039 = new $c4a9570f3a34ff00$var$oldKeysCl();\n\n\nconst $f50bd1f2915ed0f2$var$controlSubmitNewKey = function() {\n    // 2. update oldkey array\n    $0f1d4402dffacf5b$export$1fe2afda297532ed();\n    //\n    $f50bd1f2915ed0f2$var$controlGenerateNewKey();\n    // 5. render old keys\n    (0, $c4a9570f3a34ff00$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.oldKeys);\n};\nconst $f50bd1f2915ed0f2$var$controlGenerateNewKey = function() {\n    // 1. get key parameters\n    const keyParameters = (0, $a37ae16f19b7a155$export$2e2bcd8739ae039).getKeyParameters();\n    // 3. generate new key\n    $0f1d4402dffacf5b$export$7fa8378418b4411e(keyParameters);\n    // 4. render key\n    (0, $5e5b69c292c6671a$export$2e2bcd8739ae039).render($0f1d4402dffacf5b$export$ca000e230c0caa3e.key);\n};\nconst $f50bd1f2915ed0f2$var$init = function() {\n    (0, $a37ae16f19b7a155$export$2e2bcd8739ae039).addHandlerGenerate($f50bd1f2915ed0f2$var$controlSubmitNewKey);\n    (0, $a37ae16f19b7a155$export$2e2bcd8739ae039).addHandlerRangeInputUpdate((0, $a37ae16f19b7a155$export$2e2bcd8739ae039).updateRangeValue);\n    (0, $a37ae16f19b7a155$export$2e2bcd8739ae039).addHandlerRangeInputUpdate($f50bd1f2915ed0f2$var$controlGenerateNewKey);\n    (0, $a37ae16f19b7a155$export$2e2bcd8739ae039).updateRangeValue();\n    $f50bd1f2915ed0f2$var$controlSubmitNewKey();\n};\n$f50bd1f2915ed0f2$var$init();\n\n\n//# sourceMappingURL=index.6c641cfe.js.map\n","import * as model from \"./model.js\";\nimport parameterView from \"./view/parameterView.js\";\nimport keyView from \"./view/keyView.js\";\nimport oldKeyView from \"./view/oldKeyView.js\";\n\nconst controlSubmitNewKey = function () {\n  // 2. update oldkey array\n  model.updateOldKeyArray();\n  //\n  controlGenerateNewKey();\n  // 5. render old keys\n  oldKeyView.render(model.state.oldKeys);\n};\n\nconst controlGenerateNewKey = function () {\n  // 1. get key parameters\n  const keyParameters = parameterView.getKeyParameters();\n  // 3. generate new key\n  model.randomString(keyParameters);\n  // 4. render key\n  keyView.render(model.state.key);\n};\nconst init = function () {\n  parameterView.addHandlerGenerate(controlSubmitNewKey);\n  parameterView.addHandlerRangeInputUpdate(parameterView.updateRangeValue);\n  parameterView.addHandlerRangeInputUpdate(controlGenerateNewKey);\n  parameterView.updateRangeValue();\n  controlSubmitNewKey();\n};\n\ninit();\n","import { OLD_KEYS_MAX } from \"./config.js\";\n\nexport const state = {\n  key: \"\",\n  keyLength: 22,\n  characterSet: {\n    alphabet: true,\n    numbers: true,\n    symbols: true,\n  },\n  oldKeys: [],\n};\n\n/**\n * Create an array of allowable characters\n *\n * Return: array of allowable characters\n */\nconst getAllowedCharacters = function () {\n  const allowedChars = [];\n  if (state.characterSet.alphabet)\n    \"abcdefghijklmnpqrstuvwxzy\"\n      .split(\"\")\n      .forEach(\n        (char) =>\n          allowedChars.push(char) && allowedChars.push(char.toUpperCase()),\n      );\n  if (state.characterSet.numbers)\n    \"1234567890\".split(\"\").forEach((num) => allowedChars.push(num));\n  if (state.characterSet.symbols)\n    \"!@#$%^&*()[]{}/|\".split(\"\").forEach((char) => allowedChars.push(char));\n  return allowedChars;\n};\n\n/**\n * Generate random string based on state.characterset\n */\nexport const randomString = function (keyParameters) {\n  const { keyLength, ...characterSet } = keyParameters;\n  // 1. Set length and allowable characters in state\n  state.keyLength = +keyLength;\n  state.characterSet = characterSet;\n  // 2. Get allowable character array\n  const allowedChars = getAllowedCharacters();\n\n  // 3. Generate random key with character set\n  const randomKey = [];\n  const charSetLength = allowedChars.length;\n  for (let i = 0; i < state.keyLength; i++) {\n    randomKey.push(allowedChars.at(Math.floor(Math.random() * charSetLength)));\n  }\n\n  // 4. Set the current state key\n  state.key = randomKey.join(\"\");\n};\n\n/**\n *  Update oldKeys Array with current key\n *\n *  Return: NULL\n */\nexport const updateOldKeyArray = function () {\n  if (!state.key) return;\n  state.oldKeys.push(state.key);\n\n  if (state.oldKeys.length > OLD_KEYS_MAX) state.oldKeys.shift();\n};\n","export const OLD_KEYS_MAX = 10;\n","import ViewCl from \"./view\";\n\nclass paramViewCl extends ViewCl {\n  _parentElement = document.querySelector(\".key__parameters\");\n\n  /**\n   * Get key parameters from form inputParams\n   */\n  getKeyParameters() {\n    const inputParams = Array.from(\n      this._parentElement.querySelectorAll(\"input\"),\n    );\n    return {\n      keyLength: inputParams[0].value,\n      alphabet: inputParams[1].checked,\n      numbers: inputParams[2].checked,\n      symbols: inputParams[3].checked,\n    };\n  }\n  updateRangeValue() {\n    const rangeValue = document.querySelector(\"#rangeValue\");\n    const rangeInput = document.querySelector(\"#rangeInput\");\n    rangeValue.textContent = rangeInput.value;\n  }\n\n  addHandlerGenerate(handlerFunction) {\n    const btn = document.querySelector(\".generate--btn\");\n\n    btn.addEventListener(\"click\", handlerFunction);\n  }\n  addHandlerRangeInputUpdate(handlerFunction) {\n    const rangeInput = document.querySelector(\"#rangeInput\");\n    rangeInput.addEventListener(\"input\", handlerFunction);\n  }\n}\n\nexport default new paramViewCl();\n","export default class ViewCl {\n  _data;\n\n  render(data) {\n    const markup = this._generateMarkup(data);\n    if (!markup) return;\n    this._clear();\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\n  }\n\n  _clear() {\n    this._parentElement.innerHTML = ``;\n  }\n}\n","import ViewCl from \"./view\";\n\nclass keyViewCl extends ViewCl {\n  _parentElement = document.querySelector(\".key__input__container\");\n\n  selectKeyText() {\n    this._parentElement.select();\n  }\n  _generateMarkup(key) {\n    return `\n        <input\n          type=\"text\"\n          class=\"p-1 w-full select-all bg-[#2D283E]\"\n          value=\"${key}\"\n        />\n    `;\n  }\n}\n\nexport default new keyViewCl();\n","import ViewCl from \"./view\";\n\nclass oldKeysCl extends ViewCl {\n  _parentElement = document.querySelector(\".previous__key__container\");\n\n  _generateMarkup(entries) {\n    if (entries.length === 0) return;\n    // Reversed array so that it would display correctly for user\n    const markup = entries\n      .map((entry) => {\n        return `\n      <p class=\"first-letter:text-[#802BB1]\">> ${entry}</p>`;\n      })\n      .reverse();\n    return markup.join(\"\");\n  }\n}\n\nexport default new oldKeysCl();\n"],"names":["$0f1d4402dffacf5b$export$ca000e230c0caa3e","key","keyLength","characterSet","alphabet","numbers","symbols","oldKeys","$0f1d4402dffacf5b$var$getAllowedCharacters","allowedChars","split","forEach","char","push","toUpperCase","num","$0f1d4402dffacf5b$export$7fa8378418b4411e","keyParameters","randomKey","charSetLength","length","i","at","Math","floor","random","join","$0f1d4402dffacf5b$export$1fe2afda297532ed","shift","$3a395c083ce013f4$export$2e2bcd8739ae039","_data","render","data","markup","_generateMarkup","_clear","_parentElement","insertAdjacentHTML","innerHTML","$a37ae16f19b7a155$var$paramViewCl","document","querySelector","getKeyParameters","inputParams","Array","from","querySelectorAll","value","checked","updateRangeValue","rangeValue","rangeInput","textContent","addHandlerGenerate","handlerFunction","btn","addEventListener","addHandlerRangeInputUpdate","$a37ae16f19b7a155$export$2e2bcd8739ae039","$5e5b69c292c6671a$var$keyViewCl","selectKeyText","select","$5e5b69c292c6671a$export$2e2bcd8739ae039","$c4a9570f3a34ff00$var$oldKeysCl","entries","map","entry","reverse","$c4a9570f3a34ff00$export$2e2bcd8739ae039","$f50bd1f2915ed0f2$var$controlSubmitNewKey","$f50bd1f2915ed0f2$var$controlGenerateNewKey"],"version":3,"file":"index.6c641cfe.js.map"}